@model IEnumerable<OperatorManagementBL.DTOs.TransactionDTO>

@{
    ViewBag.Title = "Home Page";
}

<div class="d-flex flex-row flex-nowrap justify-content-evenly">
    <div class="shadow-sm p-3 m-min-width-250">
        <form id="makeCallForm">
            <fieldset>
                <legend class="badge bg-success">برقراری تماس</legend>
                <div class="mb-3">
                    <label for="fromSimId" class="form-label">مبدا</label>
                    @Html.DropDownList("Sim_Id", null, "انتخاب کنید", htmlAttributes: new { @class = "form-select", id = "fromSimId", onchange = "fillToId()" })
                </div>
                <div class="mb-3">
                    <label for="toSimId" class="form-label">مقصد</label>
                    @Html.DropDownList("Sim_Id", null, "انتخاب کنید", htmlAttributes: new { @class = "form-select", id = "toSimId" , disabled = "true" })

                </div>
                <div class="mb-3">
                    <label for="durationId" class="form-label">مدت تماس (به دقیقه)</label>
                    <input type="number" id="durationId" value="0" class="form-control text-end">
                </div>
                <button type="submit" class="btn btn-success"><i class="fa fa-phone mx-2 text-white"></i>تماس</button>
            </fieldset>
        </form>
    </div>
    <div class="shadow-sm p-3 m-min-width-250 m-height-fit-content">
        <form id="sendSMSForm">
            <fieldset>
                <legend class="badge bg-primary">ارسال پیامک</legend>
                <div class="mb-3">
                    <label for="sms_fromSimId" class="form-label">مبدا</label>
                    @Html.DropDownList("Sim_Id", null, "انتخاب کنید", htmlAttributes: new { @class = "form-select", id = "sms_fromSimId", onchange = "smsFillToId()" })
                </div>
                <div class="mb-3">
                    <label for="sms_toSimId" class="form-label">مقصد</label>
                    @Html.DropDownList("Sim_Id", null, "انتخاب کنید", htmlAttributes: new { @class = "form-select", id = "sms_toSimId", disabled = "true" })

                </div>
                <button type="submit" class="btn btn-primary"><i class="fa fa-paper-plane mx-2 text-white"></i>ارسال</button>
            </fieldset>
        </form>
    </div>
</div>

<div class="toast-container">

    <div id="invalidDurationToast" class="toast bg-danger text-white" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto">تماس ناموفق</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            مدت زمان تماس معتبر نیست
        </div>
    </div>

    <div id="callSuccessToast" class="toast bg-success text-white" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto">تماس موفق</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            تماس با موفقیت انجام شد
        </div>
    </div>

    <div id="callFailedInsuffienceBalanceToast" class="toast bg-danger text-white" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto">تماس ناموفق</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            تماس به دلیل کمبود موجودی انجام نشد
        </div>
    </div>

    <div id="callFailedInactiveFromSimcardToast" class="toast bg-danger text-white" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto">تماس ناموفق</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            تماس به دلیل غیرفعال بودن سیم‌کارت مبدا انجام نشد
        </div>
    </div>

    <div id="callFailedInactiveToSimcardToast" class="toast bg-danger text-white" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto">تماس ناموفق</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            تماس به دلیل غیرفعال بودن سیم‌کارت مقصد انجام نشد
        </div>
    </div>

    <div id="callFailedUnhandledToast" class="toast bg-danger text-white" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto">تماس ناموفق</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            تماس به دلیل نامعلوم انجام نشد
        </div>
    </div>




    <div id="smsSuccessToast" class="toast bg-success text-white" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto">پیام موفق</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            پیام با موفقیت ارسال شد
        </div>
    </div>

    <div id="smsFailedInsuffienceBalanceToast" class="toast bg-danger text-white" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto">پیام ناموفق</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            پیام به دلیل کمبود موجودی ارسال نشد
        </div>
    </div>

    <div id="smsFailedInactiveFromSimcardToast" class="toast bg-danger text-white" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto">پیام ناموفق</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            پیام به دلیل غیرفعال بودن سیم‌کارت مبدا ارسال نشد
        </div>
    </div>

    <div id="smsFailedInactiveToSimcardToast" class="toast bg-danger text-white" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto">پیام ناموفق</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            پیام به دلیل غیرفعال بودن سیم‌کارت مقصد ارسال نشد
        </div>
    </div>

    <div id="smsFailedUnhandledToast" class="toast bg-danger text-white" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto">پیام ناموفق</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            پیام به دلیل نامعلوم ارسال نشد
        </div>
    </div>




    <div id="InvalidFromToast" class="toast bg-danger text-white" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto">پیام ناموفق</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            شماره مبدا معتبر نمی‌باشد
        </div>
    </div>

    <div id="InvalidToToast" class="toast bg-danger text-white" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto">پیام ناموفق</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            شماره مقصد معتبر نمی‌باشد
        </div>
    </div>

</div>

<script>

    function showMakeCallSuccessToast() {
        var toastElList = [].slice.call(document.querySelectorAll('#callSuccessToast'))
        var toastList = toastElList.map(function (toastEl) {
            return new bootstrap.Toast(toastEl);
        });
        toastList.forEach(toast => toast.show());
    }

    function showMakeCallFailedInssufienceBalanceToast() {
        var toastElList = [].slice.call(document.querySelectorAll('#callFailedInsuffienceBalanceToast'))
        var toastList = toastElList.map(function (toastEl) {
            return new bootstrap.Toast(toastEl);
        });
        toastList.forEach(toast => toast.show());
    }

    function showMakeCallFailedInactiveFromSimcardToast() {
        var toastElList = [].slice.call(document.querySelectorAll('#callFailedInactiveFromSimcardToast'))
        var toastList = toastElList.map(function (toastEl) {
            return new bootstrap.Toast(toastEl);
        });
        toastList.forEach(toast => toast.show());
    }

    function showMakeCallFailedInactiveToSimcardToast() {
        var toastElList = [].slice.call(document.querySelectorAll('#callFailedInactiveToSimcardToast'))
        var toastList = toastElList.map(function (toastEl) {
            return new bootstrap.Toast(toastEl);
        });
        toastList.forEach(toast => toast.show());
    }

    function showMakeCallFailedUnhandledToast() {
        var toastElList = [].slice.call(document.querySelectorAll('#callFailedUnhandledToast'))
        var toastList = toastElList.map(function (toastEl) {
            return new bootstrap.Toast(toastEl);
        });
        toastList.forEach(toast => toast.show());
    }

    function showInvalidDurationToast() {
        var toastElList = [].slice.call(document.querySelectorAll('#invalidDurationToast'))
        var toastList = toastElList.map(function (toastEl) {
            return new bootstrap.Toast(toastEl);
        });
        toastList.forEach(toast => toast.show());
    }




    function showSendSmsSuccessToast() {
        var toastElList = [].slice.call(document.querySelectorAll('#smsSuccessToast'))
        var toastList = toastElList.map(function (toastEl) {
            return new bootstrap.Toast(toastEl);
        });
        toastList.forEach(toast => toast.show());
    }

    function showSendSmsFailedInssufienceBalanceToast() {
        var toastElList = [].slice.call(document.querySelectorAll('#smsFailedInsuffienceBalanceToast'))
        var toastList = toastElList.map(function (toastEl) {
            return new bootstrap.Toast(toastEl);
        });
        toastList.forEach(toast => toast.show());
    }

    function showSendSmsFailedInactiveFromSimcardToast() {
        var toastElList = [].slice.call(document.querySelectorAll('#smsFailedInactiveFromSimcardToast'))
        var toastList = toastElList.map(function (toastEl) {
            return new bootstrap.Toast(toastEl);
        });
        toastList.forEach(toast => toast.show());
    }

    function showSendSmsFailedInactiveToSimcardToast() {
        var toastElList = [].slice.call(document.querySelectorAll('#smsFailedInactiveToSimcardToast'))
        var toastList = toastElList.map(function (toastEl) {
            return new bootstrap.Toast(toastEl);
        });
        toastList.forEach(toast => toast.show());
    }

    function showSendSmsFailedUnhandledToast() {
        var toastElList = [].slice.call(document.querySelectorAll('#smsFailedUnhandledToast'))
        var toastList = toastElList.map(function (toastEl) {
            return new bootstrap.Toast(toastEl);
        });
        toastList.forEach(toast => toast.show());
    }





    function showInvalidFromToast() {
        var toastElList = [].slice.call(document.querySelectorAll('#InvalidFromToast'))
        var toastList = toastElList.map(function (toastEl) {
            return new bootstrap.Toast(toastEl);
        });
        toastList.forEach(toast => toast.show());
    }

    function showInvalidToToast() {
        var toastElList = [].slice.call(document.querySelectorAll('#InvalidToToast'))
        var toastList = toastElList.map(function (toastEl) {
            return new bootstrap.Toast(toastEl);
        });
        toastList.forEach(toast => toast.show());
    }





    function fillToId() {
        $("#toSimId").removeAttr("disabled");
        $("#toSimId").empty();
        $.ajax({
                cache: false,
            url: '/Home/GetSimsForDropdown',
                type: 'POST',
                data: {
                    "fromSimId": $('#fromSimId').find(":selected").val()
                },
            success: function (data) {
                    $("#toSimId").append(
                        '<option value="0">انتخاب کنید</option>'
                    );
                    $.each(data,
                        function () {
                            $("#toSimId").append(
                                '<option value="' + this.Id + '">' + this.Number + '</option>'
                            );
                        });
                }
            });

    } 

    function smsFillToId() {
        $("#sms_toSimId").removeAttr("disabled");
        $("#sms_toSimId").empty();
        $.ajax({
            cache: false,
            url: '/Home/GetSimsForDropdown',
            type: 'POST',
            data: {
                "fromSimId": $('#sms_fromSimId').find(":selected").val()
            },
            success: function (data) {
                $("#sms_toSimId").append(
                    '<option value="0">انتخاب کنید</option>'
                );
                $.each(data,
                    function () {
                        $("#sms_toSimId").append(
                            '<option value="' + this.Id + '">' + this.Number + '</option>'
                        );
                    });
            }
        });

    }

    $(document).ready(function () {
        $('#makeCallForm').on('submit', function (e) {
            e.preventDefault();
            if ($("#durationId").val() <= 0) {
                showInvalidDurationToast();
                return;
            }

            if ($('#fromSimId').val() == '' || $('#fromSimId').val() == '0') {
                showInvalidFromToast();
                return;
            }

            if ($('#toSimId').val() == '' || $('#toSimId').val() == '0') {
                showInvalidToToast();
                return;
            }

            $.ajax({
                cache: false,
                url: '/Home/MakeCall',
                type: 'POST',
                data: {
                    "fromSimId": $("#fromSimId").val(),
                    "toSimId": $("#toSimId").val(),
                    "typeId": @((int)OperatorManagementBL.Enum.TransactionTypeEnum.call),
                    "duration": $("#durationId").val()
                },
                success: function (result) {
                    if (result.statusCode == @((int)OperatorManagementBL.Enum.CallFailedEnum.ok)) {
                        showMakeCallSuccessToast();
                    }
                    else if (result.statusCode == @((int)OperatorManagementBL.Enum.CallFailedEnum.insuffienceBalance)) {
                        showMakeCallFailedInssufienceBalanceToast();
                    }else if (result.statusCode == @((int)OperatorManagementBL.Enum.CallFailedEnum.inactiveFromSimcard)) {
                        showMakeCallFailedInactiveFromSimcardToast();
                    }
                    else if (result.statusCode == @((int)OperatorManagementBL.Enum.CallFailedEnum.inactiveToSimcard)) {
                        showMakeCallFailedInactiveToSimcardToast();
                    } else {
                        showMakeCallFailedUnhandledToast();
                    }
                },
                error: function (result) {
                    showMakeCallFailedUnhandledToast();
                }
            });

        });

        $('#sendSMSForm').on('submit', function (e) {
            e.preventDefault();

            if ($('#sms_fromSimId').val() == '' || $('#sms_fromSimId').val() == '0') {
                showInvalidFromToast();
                return;
            }

            if ($('#sms_toSimId').val() == '' || $('#sms_toSimId').val() == '0') {
                showInvalidToToast();
                return;
            }

            $.ajax({
                cache: false,
                url: '/Home/SendSMS',
                type: 'POST',
                data: {
                    "fromSimId": $("#sms_fromSimId").val(),
                    "toSimId": $("#sms_toSimId").val(),
                    "typeId": @((int)OperatorManagementBL.Enum.TransactionTypeEnum.sms)
                },
                success: function (result) {
                    if (result.statusCode == @((int)OperatorManagementBL.Enum.CallFailedEnum.ok)) {
                        showSendSmsSuccessToast();
                    }
                    else if (result.statusCode == @((int)OperatorManagementBL.Enum.CallFailedEnum.insuffienceBalance)) {
                        showSendSmsFailedInssufienceBalanceToast();
                    }
                    else if (result.statusCode == @((int)OperatorManagementBL.Enum.CallFailedEnum.inactiveFromSimcard)) {
                        showSendSmsFailedInactiveFromSimcardToast();
                    }
                    else if (result.statusCode == @((int)OperatorManagementBL.Enum.CallFailedEnum.inactiveToSimcard)) {
                        showSendSmsFailedInactiveToSimcardToast();
                    }
                    else {
                        showSendSmsFailedUnhandledToast();
                    }
                },
                error: function (result) {
                    showSendSmsFailedUnhandledToast();
                }
            });

        });
    });
</script>
